name: CI Build & Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build jar
        working-directory: ./deploy/weup/backend
        run: |
          # gradlew가 있다면 실행, 없으면 로컬 gradle 사용 시 오류 발생하니 wrapper 포함 확인
          chmod +x ./gradlew || true
          ./gradlew clean bootJar -x test

      - name: Copy jar to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          source: "deploy/weup/backend/build/libs/*.jar"
          target: "${{ secrets.DEPLOY_PATH }}/app.jar"

      - name: Remote deploy - docker compose up
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            # 파일 소유권 문제 방지 (DEPLOY_USER로 소유권 설정)
            sudo chown -R ${{ secrets.DEPLOY_USER }}:${{ secrets.DEPLOY_USER }} .
            # 안전하게 재시작
            sudo docker compose down || true
            sudo docker compose up -d --build
